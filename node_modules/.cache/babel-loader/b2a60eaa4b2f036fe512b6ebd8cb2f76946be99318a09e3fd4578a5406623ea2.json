{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-management-app-main\\\\src\\\\components\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteTask, updateTask } from \"../features/tasksSlice\";\nimport TaskForm from \"./TaskForm\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Main component for displaying and managing tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const dispatch = useDispatch();\n\n  // State variables for managing task selection and visibility of the task form\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isFormVisible, setFormVisible] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  // Memoized list of tasks filtered by search query\n  const filteredTasks = useMemo(() => {\n    return tasks.filter(task => task.title.toLowerCase().includes(search.toLowerCase()));\n  }, [tasks, search]);\n\n  // Function to handle editing a task\n  const handleEdit = task => {\n    setSelectedTask(task);\n    setFormVisible(true);\n  };\n\n  // Function to handle task deletion\n  const handleDelete = id => {\n    dispatch(deleteTask(id));\n  };\n\n  // Function to close the task form\n  const closeForm = () => {\n    setSelectedTask(null);\n    setFormVisible(false);\n  };\n\n  // Function to handle drag and drop actions\n  const handleDragEnd = result => {\n    const {\n      destination,\n      source\n    } = result;\n\n    // Check if dropped outside the list or in the same position\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    // Get the task being moved and the new state from the droppableId\n    const taskId = filteredTasks[source.index].id;\n    const newState = destination.droppableId;\n\n    // Update the task's state in the Redux store\n    dispatch(updateTask({\n      id: taskId,\n      state: newState\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-around mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary w-25\",\n            onClick: () => setFormVisible(true),\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), isFormVisible && /*#__PURE__*/_jsxDEV(TaskForm, {\n            existingTask: selectedTask,\n            onClose: closeForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by task name\",\n            value: search,\n            onChange: e => setSearch(e.target.value),\n            className: \"w-50 form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid m-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-around\",\n          children: [\"todo\", \"doing\", \"done\"].map(state => /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: state,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"p-2 bg-light rounded border border-secondary\",\n              style: {\n                maxWidth: \"30%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center\",\n                children: state.charAt(0).toUpperCase() + state.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: filteredTasks.filter(task => task.state === state).map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: task.id.toString(),\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"card mb-3\",\n                    style: {\n                      width: \"100%\",\n                      minHeight: \"120px\"\n                    },\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: task.image,\n                      alt: task.title,\n                      className: \"img-fluid rounded-top\",\n                      style: {\n                        height: \"80px\",\n                        objectFit: \"cover\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"card-title\",\n                        children: task.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"card-text\",\n                        children: task.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"card-text\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Priority:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 117,\n                          columnNumber: 58\n                        }, this), \" \", task.priority]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"card-text\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"State:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 58\n                        }, this), \" \", task.state]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-primary me-2\",\n                        onClick: () => handleEdit(task),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-danger\",\n                        onClick: () => handleDelete(task.id),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 29\n                  }, this)\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), provided.placeholder, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, state, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"oTf8+wIKcgD1qDTGpBEj+ltbq9E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useMemo","useSelector","useDispatch","deleteTask","updateTask","TaskForm","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","dispatch","selectedTask","setSelectedTask","isFormVisible","setFormVisible","search","setSearch","filteredTasks","filter","task","title","toLowerCase","includes","handleEdit","handleDelete","id","closeForm","handleDragEnd","result","destination","source","droppableId","index","taskId","newState","onDragEnd","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","existingTask","onClose","type","placeholder","value","onChange","e","target","map","provided","ref","innerRef","droppableProps","style","maxWidth","charAt","toUpperCase","slice","draggableId","toString","width","minHeight","draggableProps","dragHandleProps","src","image","alt","height","objectFit","description","priority","_c","$RefreshReg$"],"sources":["D:/task-management-app-main/src/components/TaskList.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteTask, updateTask } from \"../features/tasksSlice\";\nimport TaskForm from \"./TaskForm\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Main component for displaying and managing tasks\nconst TaskList = () => {\n  const tasks = useSelector((state) => state.tasks.tasks);\n  const dispatch = useDispatch();\n\n  // State variables for managing task selection and visibility of the task form\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isFormVisible, setFormVisible] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  // Memoized list of tasks filtered by search query\n  const filteredTasks = useMemo(() => {\n    return tasks.filter((task) =>\n      task.title.toLowerCase().includes(search.toLowerCase())\n    );\n  }, [tasks, search]);\n\n  // Function to handle editing a task\n  const handleEdit = (task) => {\n    setSelectedTask(task);\n    setFormVisible(true);\n  };\n\n  // Function to handle task deletion\n  const handleDelete = (id) => {\n    dispatch(deleteTask(id));\n  };\n\n  // Function to close the task form\n  const closeForm = () => {\n    setSelectedTask(null);\n    setFormVisible(false);\n  };\n\n  // Function to handle drag and drop actions\n  const handleDragEnd = (result) => {\n    const { destination, source } = result;\n\n    // Check if dropped outside the list or in the same position\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\n      return;\n    }\n\n    // Get the task being moved and the new state from the droppableId\n    const taskId = filteredTasks[source.index].id;\n    const newState = destination.droppableId;\n\n    // Update the task's state in the Redux store\n    dispatch(updateTask({ id: taskId, state: newState }));\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <div>\n        <div className=\"container\">\n          <div className=\"row d-flex justify-content-around mt-5\">\n            {/* Button to add a new task */}\n            <button className=\"btn btn-primary w-25\" onClick={() => setFormVisible(true)}>\n              Add Task\n            </button>\n\n            {/* Task form for adding/editing tasks */}\n            {isFormVisible && <TaskForm existingTask={selectedTask} onClose={closeForm} />}\n\n            {/* Search input for filtering tasks */}\n            <input\n              type=\"text\"\n              placeholder=\"Search by task name\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              className=\"w-50 form-control\"\n            />\n          </div>\n        </div>\n\n        <div className=\"container-fluid m-4\">\n          <div className=\"row justify-content-around\">\n            {/* Droppable areas for different task states */}\n            {[\"todo\", \"doing\", \"done\"].map((state) => (\n              <Droppable key={state} droppableId={state}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    className=\"p-2 bg-light rounded border border-secondary\"\n                    style={{ maxWidth: \"30%\" }}\n                  >\n                    <h2 className=\"text-center\">{state.charAt(0).toUpperCase() + state.slice(1)}</h2>\n                    <ul className=\"list-unstyled\">\n                      {/* Render each task as a draggable item */}\n                      {filteredTasks.filter((task) => task.state === state).map((task, index) => (\n                        <Draggable key={task.id} draggableId={task.id.toString()} index={index}>\n                          {(provided) => (\n                            <li\n                              className=\"card mb-3\"\n                              style={{ width: \"100%\", minHeight: \"120px\" }}\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <img\n                                src={task.image}\n                                alt={task.title}\n                                className=\"img-fluid rounded-top\"\n                                style={{ height: \"80px\", objectFit: \"cover\" }}\n                              />\n                              <div className=\"card-body\">\n                                <h5 className=\"card-title\">{task.title}</h5>\n                                <p className=\"card-text\">{task.description}</p>\n                                <p className=\"card-text\"><strong>Priority:</strong> {task.priority}</p>\n                                <p className=\"card-text\"><strong>State:</strong> {task.state}</p>\n\n                                {/* Buttons for editing and deleting tasks */}\n                                <button className=\"btn btn-primary me-2\" onClick={() => handleEdit(task)}>\n                                  Edit\n                                </button>\n                                <button className=\"btn btn-danger\" onClick={() => handleDelete(task.id)}>\n                                  Delete\n                                </button>\n                              </div>\n                            </li>\n                          )}\n                        </Draggable>\n                      ))}\n                    </ul>\n                    {provided.placeholder} {/* Placeholder for draggable */}\n                  </div>\n                )}\n              </Droppable>\n            ))}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}