{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: []\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const {\n        id,\n        state: newState\n      } = action.payload;\n      const existingTask = state.tasks.find(task => task.id === id);\n      if (existingTask) {\n        existingTask.state = newState; // Update the state of the task\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    reorderTask: (state, action) => {\n      const {\n        id,\n        newIndex\n      } = action.payload;\n      const taskIndex = state.tasks.findIndex(task => task.id === id);\n      if (taskIndex !== -1) {\n        const [movedTask] = state.tasks.splice(taskIndex, 1);\n        state.tasks.splice(newIndex, 0, movedTask); // Reinsert task at the new index\n      }\n    }\n  }\n});\nexport const {\n  addTask,\n  updateTask,\n  deleteTask,\n  reorderTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","tasksSlice","name","initialState","tasks","reducers","addTask","state","action","push","payload","updateTask","id","newState","existingTask","find","task","deleteTask","filter","reorderTask","newIndex","taskIndex","findIndex","movedTask","splice","actions","reducer"],"sources":["D:/task-management-app-main/src/features/tasksSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: [],\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const { id, state: newState } = action.payload;\n      const existingTask = state.tasks.find(task => task.id === id);\n      if (existingTask) {\n        existingTask.state = newState; // Update the state of the task\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    reorderTask: (state, action) => {\n      const { id, newIndex } = action.payload;\n      const taskIndex = state.tasks.findIndex(task => task.id === id);\n      \n      if (taskIndex !== -1) {\n        const [movedTask] = state.tasks.splice(taskIndex, 1);\n        state.tasks.splice(newIndex, 0, movedTask); // Reinsert task at the new index\n      }\n    },\n  },\n});\n\nexport const { addTask, updateTask, deleteTask, reorderTask } = tasksSlice.actions;\nexport default tasksSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,KAAK,CAACK,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEI,EAAE;QAAEL,KAAK,EAAEM;MAAS,CAAC,GAAGL,MAAM,CAACE,OAAO;MAC9C,MAAMI,YAAY,GAAGP,KAAK,CAACH,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAIE,YAAY,EAAE;QAChBA,YAAY,CAACP,KAAK,GAAGM,QAAQ,CAAC,CAAC;MACjC;IACF,CAAC;IACDI,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACc,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAAC;IACtE,CAAC;IACDS,WAAW,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAAEI,EAAE;QAAEQ;MAAS,CAAC,GAAGZ,MAAM,CAACE,OAAO;MACvC,MAAMW,SAAS,GAAGd,KAAK,CAACH,KAAK,CAACkB,SAAS,CAACN,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAE/D,IAAIS,SAAS,KAAK,CAAC,CAAC,EAAE;QACpB,MAAM,CAACE,SAAS,CAAC,GAAGhB,KAAK,CAACH,KAAK,CAACoB,MAAM,CAACH,SAAS,EAAE,CAAC,CAAC;QACpDd,KAAK,CAACH,KAAK,CAACoB,MAAM,CAACJ,QAAQ,EAAE,CAAC,EAAEG,SAAS,CAAC,CAAC,CAAC;MAC9C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEjB,OAAO;EAAEK,UAAU;EAAEM,UAAU;EAAEE;AAAY,CAAC,GAAGlB,UAAU,CAACwB,OAAO;AAClF,eAAexB,UAAU,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}