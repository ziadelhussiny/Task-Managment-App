{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: []\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const {\n        id,\n        state: newState,\n        order\n      } = action.payload;\n      const existingTask = state.tasks.find(task => task.id === id);\n      if (existingTask) {\n        existingTask.state = newState; // Update the state of the task\n        if (order !== undefined) {\n          existingTask.order = order; // Update the order if provided\n        }\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTask,\n  updateTask,\n  deleteTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","tasksSlice","name","initialState","tasks","reducers","addTask","state","action","push","payload","updateTask","id","newState","order","existingTask","find","task","undefined","deleteTask","filter","actions","reducer"],"sources":["D:/task-management-app-main/src/features/tasksSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: [],\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const { id, state: newState, order } = action.payload;\n      const existingTask = state.tasks.find(task => task.id === id);\n      if (existingTask) {\n        existingTask.state = newState; // Update the state of the task\n        if (order !== undefined) {\n          existingTask.order = order; // Update the order if provided\n        }\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n  },\n});\n\nexport const { addTask, updateTask, deleteTask } = tasksSlice.actions;\nexport default tasksSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,KAAK,CAACK,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEI,EAAE;QAAEL,KAAK,EAAEM,QAAQ;QAAEC;MAAM,CAAC,GAAGN,MAAM,CAACE,OAAO;MACrD,MAAMK,YAAY,GAAGR,KAAK,CAACH,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAIG,YAAY,EAAE;QAChBA,YAAY,CAACR,KAAK,GAAGM,QAAQ,CAAC,CAAC;QAC/B,IAAIC,KAAK,KAAKI,SAAS,EAAE;UACvBH,YAAY,CAACD,KAAK,GAAGA,KAAK,CAAC,CAAC;QAC9B;MACF;IACF,CAAC;IACDK,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACgB,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAAC;IACtE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,OAAO;EAAEK,UAAU;EAAEQ;AAAW,CAAC,GAAGlB,UAAU,CAACoB,OAAO;AACrE,eAAepB,UAAU,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}